--- a/CMakeLists.txt	2024-02-13 17:08:26.497923000 +0300
+++ b/CMakeLists.txt	2024-02-13 12:52:24.473932056 +0300
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 3.7)
+cmake_minimum_required(VERSION 3.4)
 project(SeriousEngine)
 
 # Set @rpath for Mac OS X shared library install names.
--- a/SamTFE/Sources/CMakeLists.txt	2024-02-13 13:18:55.092066026 +0300
+++ b/SamTFE/Sources/CMakeLists.txt	2024-02-13 13:02:50.340893761 +0300
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 3.7)
+cmake_minimum_required(VERSION 3.4)
 project(SeriousEngine)
 
 # set minimal standart
@@ -309,7 +309,7 @@
 set(CMAKE_INSTALL_LIBDIR "/usr/lib")
 if(CMAKE_SIZEOF_VOID_P EQUAL 8)
     set(CMAKE_ARCH_BITS 64)
-    set(CMAKE_INSTALL_LIBDIR "/usr/lib64")
+    #set(CMAKE_INSTALL_LIBDIR "/usr/lib64")
 endif()
 
 if(FREEBSD)
@@ -321,33 +321,6 @@
 endif()
 
 message(STATUS "Arch bits: ${CMAKE_ARCH_BITS}")
-
-if(DEBIAN_FOUND OR UBUNTU_FOUND)
-    #set libdir for debian based OS
-    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "riscv64")
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/riscv64-linux-gnu")
-    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "^(arm.*|ARM.*)")  # 32bit)
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/arm-linux-gnueabihf")
-    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "^(aarch64.*|AARCH64.*)")
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/aarch64-linux-gnu")
-        if(NOT "${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
-            message(FATAL_ERROR "invalid pointer size")
-        endif()
-    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "^(powerpc|ppc)64")
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/powerpc64-linux-gnu")
-    elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL s390x)
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/s390x-linux-gnu")
-    elseif((CMAKE_SYSTEM_PROCESSOR MATCHES "i386|i686|x86|amd64|AMD64") AND (CMAKE_SIZEOF_VOID_P EQUAL 4))
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/i386-linux-gnu")
-    elseif((CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64|amd64|AMD64") AND (CMAKE_SIZEOF_VOID_P EQUAL 8))
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/x86_64-linux-gnu")
-    elseif((CMAKE_SYSTEM_PROCESSOR MATCHES "i386") AND (CMAKE_SIZEOF_VOID_P EQUAL 8) AND (APPLE))
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/i386-linux-gnu")
-    else()
-        message(FATAL_ERROR "Unknown architecture")
-    endif()
-endif()
-
 message(STATUS "Installed libraries dir: ${CMAKE_INSTALL_LIBDIR}")
 
 ## ** RAKE! start compiler specific flags section **
@@ -372,9 +345,9 @@
 			add_compile_options(-mpowerpc64)
 		else()
             if(LOCAL_INSTALL)
-			    add_compile_options(-march=native)
+			    add_compile_options(-mtune=generic)
             elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "i386|i586|i686|x86|amd64|AMD64|x86_64")
-			    add_compile_options(-march=native) # set mtune=generic if nedded
+			    add_compile_options(-mtune=generic) # set mtune=generic if nedded
 		    endif()
 		endif()
 	endif()
--- a/SamTSE/Sources/CMakeLists.txt	2024-02-13 13:18:55.092066026 +0300
+++ b/SamTSE/Sources/CMakeLists.txt	2024-02-13 13:02:50.340893761 +0300
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 3.7)
+cmake_minimum_required(VERSION 3.4)
 project(SeriousEngine)
 
 # set minimal standart
@@ -309,7 +309,7 @@
 set(CMAKE_INSTALL_LIBDIR "/usr/lib")
 if(CMAKE_SIZEOF_VOID_P EQUAL 8)
     set(CMAKE_ARCH_BITS 64)
-    set(CMAKE_INSTALL_LIBDIR "/usr/lib64")
+    #set(CMAKE_INSTALL_LIBDIR "/usr/lib64")
 endif()
 
 if(FREEBSD)
@@ -321,33 +321,6 @@
 endif()
 
 message(STATUS "Arch bits: ${CMAKE_ARCH_BITS}")
-
-if(DEBIAN_FOUND OR UBUNTU_FOUND)
-    #set libdir for debian based OS
-    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "riscv64")
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/riscv64-linux-gnu")
-    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "^(arm.*|ARM.*)")  # 32bit)
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/arm-linux-gnueabihf")
-    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "^(aarch64.*|AARCH64.*)")
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/aarch64-linux-gnu")
-        if(NOT "${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
-            message(FATAL_ERROR "invalid pointer size")
-        endif()
-    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "^(powerpc|ppc)64")
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/powerpc64-linux-gnu")
-    elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL s390x)
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/s390x-linux-gnu")
-    elseif((CMAKE_SYSTEM_PROCESSOR MATCHES "i386|i686|x86|amd64|AMD64") AND (CMAKE_SIZEOF_VOID_P EQUAL 4))
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/i386-linux-gnu")
-    elseif((CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64|amd64|AMD64") AND (CMAKE_SIZEOF_VOID_P EQUAL 8))
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/x86_64-linux-gnu")
-    elseif((CMAKE_SYSTEM_PROCESSOR MATCHES "i386") AND (CMAKE_SIZEOF_VOID_P EQUAL 8) AND (APPLE))
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/i386-linux-gnu")
-    else()
-        message(FATAL_ERROR "Unknown architecture")
-    endif()
-endif()
-
 message(STATUS "Installed libraries dir: ${CMAKE_INSTALL_LIBDIR}")
 
 ## ** RAKE! start compiler specific flags section **
@@ -372,9 +345,9 @@
 			add_compile_options(-mpowerpc64)
 		else()
             if(LOCAL_INSTALL)
-			    add_compile_options(-march=native)
+			    add_compile_options(-mtune=generic)
             elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "i386|i586|i686|x86|amd64|AMD64|x86_64")
-			    add_compile_options(-march=native) # set mtune=generic if nedded
+			    add_compile_options(-mtune=generic) # set mtune=generic if nedded
 		    endif()
 		endif()
 	endif()
