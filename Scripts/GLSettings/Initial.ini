
// set all rendering console variables to initial values

Echo( "GLSET: Initial setup.\n");

gap_iUseTextureUnits = 4;
gap_bOptimizeStateChanges = 1;
gap_iOptimizeDepthReads = 1;
gap_iOptimizeClipping = 2;
gap_bAllowGrayTextures = 1;
gap_bAllowSingleMipmap = 1;
gap_iTextureFiltering  = 21;
gap_iTextureAnisotropy = 1;
gap_fTextureLODBias    = 0;
gap_iSwapInterval = 0;
gap_iRefreshRate  = 0;
gap_bForceTruform = 0;
gap_iTruformLevel = 3;
gap_iDithering = 2;

ogl_bUseCompiledVertexArrays = 101;
ogl_bExclusive = 1;
ogl_bAllowQuadArrays = 1;
ogl_iMaxBurstSize = 0;
ogl_iTextureCompressionType = 1;
ogl_bTruformLinearNormals = 1;
ogl_bAlternateClipPlane = 0;
ogl_iFinish = 0;

d3d_bUseHardwareTnL = 1;
d3d_bAlternateDepthReads = 0;
d3d_iVertexBuffersSize = 512;
d3d_iVertexRangeTreshold = 99;
d3d_iMaxBurstSize = 21;
d3d_iFinish = 0;

mdl_fLODMul = 1;
mdl_fLODAdd = 0;
mdl_iLODDisappear = 1;
mdl_bRenderDetail = 1;
mdl_bRenderSpecular = 1;
mdl_bRenderReflection = 1;
mdl_bFineQuality = 1;
mdl_iShadowQuality = 1;

if( sys_strModExt=="") {
  // no overbrighting on models in original SSam
  mdl_bAllowOverbright = 0;
} else {
  // everything else goes!
  mdl_bAllowOverbright = 1;
}

wld_iDetailRemovingBias = 3;
wld_bTextureLayers = 111;
wld_bRenderMirrors = 1;

tex_iNormalQuality    = 22;
tex_iAnimationQuality = 11;
tex_bFineEffect = 0;
tex_bFineFog    = 1;
tex_iNormalSize    = 9;
tex_iAnimationSize = 7;
tex_iEffectSize    = 8;
tex_iFogSize       = 7;
tex_iDithering = 3;
tex_iFiltering = -2;
tex_iEffectFiltering = 4;
tex_bProgressiveFilter = 0;
tex_bCompressAlphaChannel = 0;
tex_bAlternateCompression = 0;
tex_bDynamicMipmaps = 1;

shd_iStaticSize  = 8;
shd_iDynamicSize = 7;
shd_bFineQuality = 1;
shd_iFiltering = 3;
shd_iDithering = 1;
shd_iAllowDynamic = 1;
shd_bDynamicMipmaps = 1;
shd_bCacheAll = 0;
shd_bAllowFlats = 1;

gfx_iLensFlareQuality = 3;
gfx_bClearScreen = 0;
gfx_bDisableMultiMonSupport = 1;
gfx_tmProbeDecay = 30;
gfx_iProbeSize = 256;

gam_bPretouch = 0;

// must re-init because of old SSam doesn't support these two
persistent extern user FLOAT gfx_fEnvParticlesDensity = 1.0;
persistent extern user FLOAT gfx_fEnvParticlesRange   = 1.0;


// setup memory size

extern INDEX iQualityIndex = 0;  // undetermined


if( sys_iRAMPhys>230)
{
  iQualityIndex = 5;   // >224 MB, 64MB video
}

else if( sys_iRAMPhys>180)
{
  iQualityIndex = 4;   // 192-224 MB, 32MB video
}

else if( sys_iRAMPhys>100)
{
  iQualityIndex = 3;   // 128-192 MB, 16 MB video
}

else if( sys_iRAMPhys>60)
{
  iQualityIndex = 2;   // 64-96 MB, 4-8 MB video
}

else
{
  iQualityIndex = 1;   // <64 MB, <4 MB video
}
