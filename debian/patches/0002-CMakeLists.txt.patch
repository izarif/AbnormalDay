Description: Set Debian specific paths: https://wiki.debian.org/Games/Checklist
Forwarded: not-needed
--- a/SamTFE/Sources/CMakeLists.txt	2024-01-16 19:22:10.000000000 +0300
+++ b/SamTFE/Sources/CMakeLists.txt	2024-02-28 20:02:20.589328477 +0300
@@ -135,7 +135,8 @@
       set(RPATH_SETTINGS "-rpath=/var/tmp/portage")
       message(STATUS "Build for Gentoo with '-rpath=/var/tmp/portage'")
     else()
-      set(RPATH_SETTINGS "-rpath,$ORIGIN")
+      set(RPATH_SETTINGS "-rpath=/usr/lib/games/${INTERNAL_NAME}")
+      message(STATUS "Build for Debian with '-rpath=/usr/lib/games/${INTERNAL_NAME}'")
     endif()
 endif()
 if(CMAKE_SYSTEM_NAME STREQUAL "FreeBSD" OR CMAKE_SYSTEM_NAME STREQUAL "OpenBSD" OR CMAKE_SYSTEM_NAME STREQUAL "NetBSD")
@@ -306,10 +307,9 @@
 message(STATUS "Operating system name: ${CMAKE_OS_NAME}")
 
 set(CMAKE_ARCH_BITS 32)
-set(CMAKE_INSTALL_LIBDIR "/usr/lib")
+set(CMAKE_INSTALL_LIBDIR "/usr/lib/games")
 if(CMAKE_SIZEOF_VOID_P EQUAL 8)
     set(CMAKE_ARCH_BITS 64)
-    set(CMAKE_INSTALL_LIBDIR "/usr/lib64")
 endif()
 
 if(FREEBSD)
@@ -321,33 +321,6 @@
 endif()
 
 message(STATUS "Arch bits: ${CMAKE_ARCH_BITS}")
-
-if(DEBIAN_FOUND OR UBUNTU_FOUND)
-    #set libdir for debian based OS
-    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "riscv64")
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/riscv64-linux-gnu")
-    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "^(arm.*|ARM.*)")  # 32bit)
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/arm-linux-gnueabihf")
-    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "^(aarch64.*|AARCH64.*)")
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/aarch64-linux-gnu")
-        if(NOT "${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
-            message(FATAL_ERROR "invalid pointer size")
-        endif()
-    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "^(powerpc|ppc)64")
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/powerpc64-linux-gnu")
-    elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL s390x)
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/s390x-linux-gnu")
-    elseif((CMAKE_SYSTEM_PROCESSOR MATCHES "i386|i686|x86|amd64|AMD64") AND (CMAKE_SIZEOF_VOID_P EQUAL 4))
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/i386-linux-gnu")
-    elseif((CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64|amd64|AMD64") AND (CMAKE_SIZEOF_VOID_P EQUAL 8))
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/x86_64-linux-gnu")
-    elseif((CMAKE_SYSTEM_PROCESSOR MATCHES "i386") AND (CMAKE_SIZEOF_VOID_P EQUAL 8) AND (APPLE))
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/i386-linux-gnu")
-    else()
-        message(FATAL_ERROR "Unknown architecture")
-    endif()
-endif()
-
 message(STATUS "Installed libraries dir: ${CMAKE_INSTALL_LIBDIR}")
 
 ## ** RAKE! start compiler specific flags section **
@@ -372,9 +345,9 @@
 			add_compile_options(-mpowerpc64)
 		else()
             if(LOCAL_INSTALL)
-			    add_compile_options(-march=native)
+			    add_compile_options(-mtune=generic)
             elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "i386|i586|i686|x86|amd64|AMD64|x86_64")
-			    add_compile_options(-march=native) # set mtune=generic if nedded
+			    add_compile_options(-mtune=generic) # set mtune=generic if nedded
 		    endif()
 		endif()
 	endif()
@@ -1551,25 +1524,25 @@
     endif()
 else()
     install(TARGETS SeriousSam${MP} ${SHADERSLIB} ${GAMEMPLIB} ${ENTITIESMPLIB}
-            RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/bin"
+            RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/games"
             LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}/${INTERNAL_NAME}"
             PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_WRITE GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
     install(TARGETS ${ENGINELIB}
-            LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+            LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}/${INTERNAL_NAME}"
             PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_WRITE GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
     if(BUILD_DEDICATED_SERVER)
         install(TARGETS DedicatedServer${MP}
-                RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/bin"
+                RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/games"
                 PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_WRITE GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
     endif()
     if(BUILD_MAKEFONT)
         install(TARGETS MakeFONT${MP}
-                RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/bin"
+                RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/games"
                 PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_WRITE GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
     endif()
     if(BUILD_TEXConv)
         install(TARGETS TEXConv${MP}
-                RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/bin"
+                RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/games"
                 PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_WRITE GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
     endif()
     if(BUILD_AMP11LIB)
@@ -1588,10 +1561,14 @@
 # and SE1_10.gro needs to be installed to Games root dir.
 if(NOT LOCAL_INSTALL AND NOT XPLUS)
     install(FILES ${CMAKE_ADD_TARGET_DIR}/../SE1_10b.gro
-            DESTINATION "${CMAKE_INSTALL_PREFIX}/share/${INTERNAL_NAME}"
+            DESTINATION "${CMAKE_INSTALL_PREFIX}/share/games/${INTERNAL_NAME}"
             PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)
-    install(FILES "${CMAKE_ADD_TARGET_DIR}/../${INTERNAL_NAME}.desktop"
-            DESTINATION "${CMAKE_INSTALL_PREFIX}//share/applications"
+  if(INTERNAL_NAME STREQUAL "serioussam")
+    install(FILES "${CMAKE_ADD_TARGET_DIR}/../${INTERNAL_NAME}.desktop" RENAME "io.github.tx00100xt.serioussam.desktop"
+            DESTINATION "${CMAKE_INSTALL_PREFIX}/share/applications"
+            PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)
+    install(FILES "${CMAKE_ADD_TARGET_DIR}/../../debian/io.github.tx00100xt.serioussam.appdata.xml"
+            DESTINATION "${CMAKE_INSTALL_PREFIX}/share/metainfo"
             PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)
     set(A 16)
     set(B 32)
@@ -1605,9 +1582,14 @@
             OUTPUT_VARIABLE outVar
        )
        install(FILES ${CMAKE_ADD_TARGET_DIR}/../${X}.png
-               DESTINATION "${CMAKE_INSTALL_PREFIX}/share/icons/hicolor/${X}x${X}/apps" RENAME "${INTERNAL_NAME}.png"
+               DESTINATION "${CMAKE_INSTALL_PREFIX}/share/icons/hicolor/${X}x${X}/apps" RENAME "io.github.tx00100xt.${INTERNAL_NAME}.png"
                PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)
 	endforeach()
+  else()
+    install(FILES "${CMAKE_ADD_TARGET_DIR}/../${INTERNAL_NAME}.desktop" RENAME "io.github.tx00100xt.serioussamse.desktop"
+            DESTINATION "${CMAKE_INSTALL_PREFIX}/share/applications"
+            PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)
+  endif()
 endif()
 
 # end of CMakeLists.txt ...
--- a/SamTSE/Sources/CMakeLists.txt	2024-01-16 19:22:10.000000000 +0300
+++ b/SamTSE/Sources/CMakeLists.txt	2024-02-28 20:03:48.398429633 +0300
@@ -135,7 +135,8 @@
       set(RPATH_SETTINGS "-rpath=/var/tmp/portage")
       message(STATUS "Build for Gentoo with '-rpath=/var/tmp/portage'")
     else()
-      set(RPATH_SETTINGS "-rpath,$ORIGIN")
+      set(RPATH_SETTINGS "-rpath=/usr/lib/games/${INTERNAL_NAME}")
+      message(STATUS "Build for Debian with '-rpath=/usr/lib/games/${INTERNAL_NAME}'")
     endif()
 endif()
 if(CMAKE_SYSTEM_NAME STREQUAL "FreeBSD" OR CMAKE_SYSTEM_NAME STREQUAL "OpenBSD" OR CMAKE_SYSTEM_NAME STREQUAL "NetBSD")
@@ -306,10 +307,9 @@
 message(STATUS "Operating system name: ${CMAKE_OS_NAME}")
 
 set(CMAKE_ARCH_BITS 32)
-set(CMAKE_INSTALL_LIBDIR "/usr/lib")
+set(CMAKE_INSTALL_LIBDIR "/usr/lib/games")
 if(CMAKE_SIZEOF_VOID_P EQUAL 8)
     set(CMAKE_ARCH_BITS 64)
-    set(CMAKE_INSTALL_LIBDIR "/usr/lib64")
 endif()
 
 if(FREEBSD)
@@ -321,33 +321,6 @@
 endif()
 
 message(STATUS "Arch bits: ${CMAKE_ARCH_BITS}")
-
-if(DEBIAN_FOUND OR UBUNTU_FOUND)
-    #set libdir for debian based OS
-    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "riscv64")
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/riscv64-linux-gnu")
-    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "^(arm.*|ARM.*)")  # 32bit)
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/arm-linux-gnueabihf")
-    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "^(aarch64.*|AARCH64.*)")
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/aarch64-linux-gnu")
-        if(NOT "${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
-            message(FATAL_ERROR "invalid pointer size")
-        endif()
-    elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "^(powerpc|ppc)64")
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/powerpc64-linux-gnu")
-    elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL s390x)
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/s390x-linux-gnu")
-    elseif((CMAKE_SYSTEM_PROCESSOR MATCHES "i386|i686|x86|amd64|AMD64") AND (CMAKE_SIZEOF_VOID_P EQUAL 4))
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/i386-linux-gnu")
-    elseif((CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64|amd64|AMD64") AND (CMAKE_SIZEOF_VOID_P EQUAL 8))
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/x86_64-linux-gnu")
-    elseif((CMAKE_SYSTEM_PROCESSOR MATCHES "i386") AND (CMAKE_SIZEOF_VOID_P EQUAL 8) AND (APPLE))
-        set(CMAKE_INSTALL_LIBDIR "/usr/lib/i386-linux-gnu")
-    else()
-        message(FATAL_ERROR "Unknown architecture")
-    endif()
-endif()
-
 message(STATUS "Installed libraries dir: ${CMAKE_INSTALL_LIBDIR}")
 
 ## ** RAKE! start compiler specific flags section **
@@ -372,9 +345,9 @@
 			add_compile_options(-mpowerpc64)
 		else()
             if(LOCAL_INSTALL)
-			    add_compile_options(-march=native)
+			    add_compile_options(-mtune=generic)
             elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "i386|i586|i686|x86|amd64|AMD64|x86_64")
-			    add_compile_options(-march=native) # set mtune=generic if nedded
+			    add_compile_options(-mtune=generic) # set mtune=generic if nedded
 		    endif()
 		endif()
 	endif()
@@ -1551,25 +1524,25 @@
     endif()
 else()
     install(TARGETS SeriousSam${MP} ${SHADERSLIB} ${GAMEMPLIB} ${ENTITIESMPLIB}
-            RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/bin"
+            RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/games"
             LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}/${INTERNAL_NAME}"
             PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_WRITE GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
     install(TARGETS ${ENGINELIB}
-            LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+            LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}/${INTERNAL_NAME}"
             PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_WRITE GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
     if(BUILD_DEDICATED_SERVER)
         install(TARGETS DedicatedServer${MP}
-                RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/bin"
+                RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/games"
                 PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_WRITE GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
     endif()
     if(BUILD_MAKEFONT)
         install(TARGETS MakeFONT${MP}
-                RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/bin"
+                RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/games"
                 PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_WRITE GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
     endif()
     if(BUILD_TEXConv)
         install(TARGETS TEXConv${MP}
-                RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/bin"
+                RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}/games"
                 PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_WRITE GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
     endif()
     if(BUILD_AMP11LIB)
@@ -1588,10 +1561,14 @@
 # and SE1_10.gro needs to be installed to Games root dir.
 if(NOT LOCAL_INSTALL AND NOT XPLUS)
     install(FILES ${CMAKE_ADD_TARGET_DIR}/../SE1_10b.gro
-            DESTINATION "${CMAKE_INSTALL_PREFIX}/share/${INTERNAL_NAME}"
+            DESTINATION "${CMAKE_INSTALL_PREFIX}/share/games/${INTERNAL_NAME}"
             PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)
-    install(FILES "${CMAKE_ADD_TARGET_DIR}/../${INTERNAL_NAME}.desktop"
-            DESTINATION "${CMAKE_INSTALL_PREFIX}//share/applications"
+  if(INTERNAL_NAME STREQUAL "serioussam")
+    install(FILES "${CMAKE_ADD_TARGET_DIR}/../${INTERNAL_NAME}.desktop" RENAME "io.github.tx00100xt.serioussam.desktop"
+            DESTINATION "${CMAKE_INSTALL_PREFIX}/share/applications"
+            PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)
+    install(FILES "${CMAKE_ADD_TARGET_DIR}/../../debian/io.github.tx00100xt.serioussam.appdata.xml"
+            DESTINATION "${CMAKE_INSTALL_PREFIX}/share/metainfo"
             PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)
     set(A 16)
     set(B 32)
@@ -1605,9 +1582,14 @@
             OUTPUT_VARIABLE outVar
        )
        install(FILES ${CMAKE_ADD_TARGET_DIR}/../${X}.png
-               DESTINATION "${CMAKE_INSTALL_PREFIX}/share/icons/hicolor/${X}x${X}/apps" RENAME "${INTERNAL_NAME}.png"
+               DESTINATION "${CMAKE_INSTALL_PREFIX}/share/icons/hicolor/${X}x${X}/apps" RENAME "io.github.tx00100xt.${INTERNAL_NAME}.png"
                PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)
 	endforeach()
+  else()
+    install(FILES "${CMAKE_ADD_TARGET_DIR}/../${INTERNAL_NAME}.desktop" RENAME "io.github.tx00100xt.serioussamse.desktop"
+            DESTINATION "${CMAKE_INSTALL_PREFIX}/share/applications"
+            PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)
+  endif()
 endif()
 
 # end of CMakeLists.txt ...
